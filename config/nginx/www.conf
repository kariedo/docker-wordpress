upstream fastcgi_backend {
    server  127.0.0.1:9000;
}

server {
    listen 80 default_server;
	  listen 443 ssl;
    server_name _;
    root /var/www/html;

    ssl_certificate     /etc/nginx/ssl-nginx.crt;
    ssl_certificate_key /etc/nginx/ssl-nginx.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    access_log /var/log/nginx/access.log;

    index index.php;
    autoindex off;
    charset UTF-8;

    location = /favicon.ico {
            log_not_found off;
            access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        try_files $uri /index.php?$args;
    }

    location / {
            # This is cool because no php is touched for static content.
            # include the "?$args" part so non-default permalinks doesn't break when using query string
            try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
            fastcgi_pass   fastcgi_backend;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
    }

    # Directives to send expires headers and turn off 404 error logging.
    location ~* ^.+\.(eot|otf|woff|woff2|ttf|rss|atom|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        access_log off; log_not_found off; expires max;
    }

    # Media: images, icons, video, audio send expires headers.
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }

    # CSS and Javascript send expires headers.
    location ~* \.(?:css|js)$ {
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    # HTML send expires headers.
    location ~* \.(html)$ {
      expires 7d;
      access_log off;
      add_header Cache-Control "public";
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    #
    # These rules was taken from: https://jesus.perezpaz.es/874/wordpress-nginx-configuration/ and
    # pretend to avoid to hacking tools to get information about Wordpress installation
    #
    #    Common deny or internal locations, to help prevent access to areas of
    #    the site that should not be public
    location ~* wp-admin/includes { deny all; }
    location ~* wp-includes/theme-compat/ { deny all; }
    location ~* wp-includes/js/tinymce/langs/.*\.php { deny all; }
    location /wp-content/ { internal; }
    location /wp-includes/ { internal; }

    #    Protects the wp-config.php|readme.html|license.txt files from being
    #    accessed (uncomment after wordpress installation)
    location ~ /(\.|wp-config.php|readme.html|license.txt) { deny all; }

    #    Prevent access to any files starting with a $ (usually temp files)
    location ~ ~$ { access_log off; log_not_found off; deny all; }

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (\.php$|\.htaccess$|\.git) {
        deny all;
    }
}
